"use strict";(self.webpackChunkhalo_documentation=self.webpackChunkhalo_documentation||[]).push([[7509],{11470:(e,n,r)=>{r.d(n,{A:()=>C});var t=r(96540),o=r(34164),i=r(23104),a=r(56347),s=r(205),c=r(57485),l=r(31682),d=r(70679);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return u(e).map(({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t}))}(r);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const r=(0,a.W6)(),o=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(o),(0,t.useCallback)(e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})},[o,r])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:o}=e,i=p(e),[a,c]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find(e=>e.default)??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i})),[l,u]=m({queryString:r,groupId:o}),[x,j]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,o]=(0,d.Dv)(n);return[r,(0,t.useCallback)(e=>{n&&o.set(e)},[n,o])]}({groupId:o}),b=(()=>{const e=l??x;return h({value:e,tabValues:i})?e:null})();(0,s.A)(()=>{b&&c(b)},[b]);return{selectedValue:a,selectValue:(0,t.useCallback)(e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),j(e)},[u,j,i]),tabValues:i}}var j=r(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var S=r(74848);function f({className:e,block:n,selectedValue:r,selectValue:t,tabValues:a}){const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),l=e=>{const n=e.currentTarget,o=s.indexOf(n),i=a[o].value;i!==r&&(c(n),t(i))},d=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const r=s.indexOf(e.currentTarget)+1;n=s[r]??s[0];break}case"ArrowLeft":{const r=s.indexOf(e.currentTarget)-1;n=s[r]??s[s.length-1];break}}n?.focus()};return(0,S.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:t})=>(0,S.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{s.push(e)},onKeyDown:d,onClick:l,...t,className:(0,o.A)("tabs__item",b.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:r}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===r);return e?(0,t.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,S.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function g(e){const n=x(e);return(0,S.jsxs)("div",{className:(0,o.A)("tabs-container",b.tabList),children:[(0,S.jsx)(f,{...n,...e}),(0,S.jsx)(v,{...n,...e})]})}function C(e){const n=(0,j.A)();return(0,S.jsx)(g,{...e,children:u(e.children)},String(n))}},19365:(e,n,r)=>{r.d(n,{A:()=>a});r(96540);var t=r(34164);const o={tabItem:"tabItem_Ymn6"};var i=r(74848);function a({children:e,hidden:n,className:r}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,r),hidden:n,children:e})}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(96540);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},38576:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate/step-2-prepare","title":"Step 2: Prepare","description":"After the initialization is completed, select below parameters to prepare and play sonic feedback","source":"@site/docs/documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate/step-2-prepare.mdx","sourceDirName":"documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate","slug":"/documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate/step-2-prepare","permalink":"/docs/documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate/step-2-prepare","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Step 1: Initialise","permalink":"/docs/documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate/step-1-initialise"},"next":{"title":"Step 3: Play","permalink":"/docs/documentations/sdk/branding-guidelines/mastercard/android-sdk/steps-to-integrate/step-3-play"}}');var o=r(74848),i=r(28453),a=r(11470),s=r(19365);const c={},l="Step 2: Prepare",d={},u=[];function p(e){const n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"step-2-prepare",children:"Step 2: Prepare"})}),"\n",(0,o.jsx)(n.p,{children:"After the initialization is completed, select below parameters to prepare and play sonic feedback"}),"\n",(0,o.jsxs)(n.p,{children:["Select one of the following ",(0,o.jsx)(n.code,{children:"sonicType"}),"."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"SOUND_AND_ANIMATION (default)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"SOUND_ONLY"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"ANIMATION_ONLY"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Select one of the following ",(0,o.jsx)(n.code,{children:"SonicEnvironment"}),"."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"SANDBOX"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"PRODUCTION"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"PRODUCTION"})," is used for production environment else select ",(0,o.jsx)(n.code,{children:"SANDBOX"})," for development and testing."]}),"\n",(0,o.jsxs)(n.p,{children:["Select one of the following ",(0,o.jsx)(n.code,{children:"sonicCue"}),"."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"checkout"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"securedby"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Enable/disable haptic feedback ",(0,o.jsx)(n.code,{children:"isHapticsEnabled"}),"."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"true (default)"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"false"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Sound and Animation"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Invoke ",(0,o.jsx)(n.code,{children:"prepare()"})," method of ",(0,o.jsx)(n.code,{children:"SonicController"})," providing ",(0,o.jsx)(n.code,{children:"SonicType"})," as ",(0,o.jsx)(n.code,{children:"SonicType.SOUND_AND_ANIMATION"})," , ",(0,o.jsx)(n.code,{children:"SonicEnvironment"})," as ",(0,o.jsx)(n.code,{children:"SANDBOX"})," and ",(0,o.jsx)(n.code,{children:"sonicCue"})," as ",(0,o.jsx)(n.code,{children:"checkout"}),". This method loads the sound, animation, and haptic resources. On preparation, it returns ",(0,o.jsx)(n.code,{children:"StatusCode.SUCCESS"})," in ",(0,o.jsx)(n.code,{children:"onPrepared()"})," as a part of ",(0,o.jsx)(n.code,{children:"OnPrepareListener()"}),". On successful preparation, call ",(0,o.jsx)(n.code,{children:"play()"})," method to play Mastercard Sonic Sound and Animation."]}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(s.A,{value:"Kotlin",label:"Kotlin",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'//import statements\nimport android.util.Log\nimport com.mastercard.sonic.controller.SonicType\nimport com.mastercard.sonic.listeners.OnPrepareListener\n\n//invoke prepare call in onViewCreated method\nsonicController.prepare(\n            sonicType = SonicType.SOUND_AND_ANIMATION,\n            sonicCue = sonicCue,\n            sonicEnvironment = SonicEnvironment.SANDBOX,\n            merchant = sonicMerchant,\n            isHapticsEnabled = true,\n            context = requireContext().applicationContext,\n            onPrepareListener = object :\n                OnPrepareListener {\n                override fun onPrepared(statusCode: Int) {\n                    Log.d("SonicFragment", "SonicView is prepared, statusCode=$statusCode")\n                    playSonic() // Refer to Step 3: Play\n                }\n            })\n\n\n'})})}),(0,o.jsx)(s.A,{value:"Java",label:"Java",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'//import statements\nimport android.util.Log;\nimport com.mastercard.sonic.controller.SonicType;\nimport com.mastercard.sonic.listeners.OnPrepareListener;\n\n//add prepare call in onViewCreated method\n@Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        sonicController.prepare(SonicType.SOUND_AND_ANIMATION, sonicCue, SonicEnvironment.SANDBOX, sonicMerchant, requireContext().getApplicationContext(), new OnPrepareListener(){\n            @Override\n            public void onPrepared(int statusCode) {\n                Log.d("SonicFragment", "SonicView is prepared, statusCode="+ statusCode);\n                playSonic(); // Refer to Step 3: Play\n            }\n        });\n    }\n\n'})})})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Sound Only"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Invoke ",(0,o.jsx)(n.code,{children:"prepare()"})," method of ",(0,o.jsx)(n.code,{children:"SonicController"})," providing ",(0,o.jsx)(n.code,{children:"SonicType"})," as ",(0,o.jsx)(n.code,{children:"SonicType.SOUND_ONLY"})," , ",(0,o.jsx)(n.code,{children:"SonicEnvironment"})," as ",(0,o.jsx)(n.code,{children:"SANDBOX"})," and ",(0,o.jsx)(n.code,{children:"sonicCue"})," as ",(0,o.jsx)(n.code,{children:"checkout"}),". This method loads the sound resource only. On preparation, it returns ",(0,o.jsx)(n.code,{children:"StatusCode.SUCCESS"})," in ",(0,o.jsx)(n.code,{children:"onPrepared()"})," as a part of ",(0,o.jsx)(n.code,{children:"OnPrepareListener()"}),"."]}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(s.A,{value:"Kotlin",label:"Kotlin",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'//import statements\nimport android.util.Log\nimport com.mastercard.sonic.controller.SonicType\nimport com.mastercard.sonic.listeners.OnPrepareListener\n\n//Add prepare call in onViewCreated method\nsonicController.prepare(\n            sonicType = SonicType.SOUND_ONLY,\n            sonicCue = sonicCue,\n            sonicEnvironment = SonicEnvironment.SANDBOX,\n            merchant = sonicMerchant,\n            isHapticsEnabled = true,\n            context = requireContext().applicationContext,\n            onPrepareListener = object :\n                OnPrepareListener {\n                override fun onPrepared(statusCode: Int) {\n                    Log.d("SonicFragment", "Sound prepared, statusCode=$statusCode")\n                    playSonic() // Refer to Step 3: Play\n                }\n            })\n\n\n'})})}),(0,o.jsx)(s.A,{value:"Java",label:"Java",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'//import statements\nimport android.util.Log;\nimport com.mastercard.sonic.controller.SonicType;\nimport com.mastercard.sonic.listeners.OnPrepareListener;\n\n//add prepare call in onViewCreated method\n@Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        sonicController.prepare(SonicType.SOUND_ONLY, sonicCue, SonicEnvironment.SANDBOX, sonicMerchant, getContext()requireContext().getApplicationContext(), new OnPrepareListener(){\n            @Override\n            public void onPrepared(int statusCode) {\n                Log.d("SonicFragment", "Sound prepared, statusCode="+ statusCode);\n                playSonic(); // Refer to Step 3: Play\n            }\n        });\n    }\n\n'})})})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Animation Only"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Invoke ",(0,o.jsx)(n.code,{children:"prepare()"})," method of ",(0,o.jsx)(n.code,{children:"SonicController"})," providing ",(0,o.jsx)(n.code,{children:"SonicType"})," as ",(0,o.jsx)(n.code,{children:"SonicType.ANIMATION_ONLY"})," , ",(0,o.jsx)(n.code,{children:"SonicEnvironment"})," as ",(0,o.jsx)(n.code,{children:"SANDBOX"})," and ",(0,o.jsx)(n.code,{children:"sonicCue"})," as ",(0,o.jsx)(n.code,{children:"securedby"}),". This method loads the animation resource. On preparation, it returns the ",(0,o.jsx)(n.code,{children:"StatusCode.SUCCESS"})," in ",(0,o.jsx)(n.code,{children:"onPrepared()"})," as part of ",(0,o.jsx)(n.code,{children:"OnPrepareListener()"}),". On successful preparation, call ",(0,o.jsx)(n.code,{children:"play()"})," method to play Mastercard Checkout Animation."]}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(s.A,{value:"Kotlin",label:"Kotlin",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'//import statements\nimport android.util.Log\nimport com.mastercard.sonic.controller.SonicType\nimport com.mastercard.sonic.listeners.OnPrepareListener\n\n//Add prepare call in onViewCreated method\nsonicController.prepare(\n            sonicType = SonicType.ANIMATION_ONLY,\n            sonicCue = sonicCue,\n            sonicEnvironment = SonicEnvironment.SANDBOX,\n            merchant = sonicMerchant,\n            isHapticsEnabled = true,\n            context = requireContext().applicationContext,\n            onPrepareListener = object :\n                OnPrepareListener {\n                override fun onPrepared(statusCode: Int) {\n                    Log.d("SonicFragment", "SonicView is prepared, statusCode=$statusCode")\n                    playSonic() // Refer to Step 3: Play\n                }\n            })\n\n'})})}),(0,o.jsx)(s.A,{value:"Java",label:"Java",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'//import statements\nimport android.util.Log;\nimport com.mastercard.sonic.controller.SonicType;\nimport com.mastercard.sonic.listeners.OnPrepareListener;\n\n//add prepare call in onViewCreated method\n@Override\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        sonicController.prepare(SonicType.ANIMATION_ONLY, sonicCue, SonicEnvironment.SANDBOX, sonicMerchant, getContext()requireContext().getApplicationContext(), new OnPrepareListener(){\n            @Override\n            public void onPrepared(int statusCode) {\n                Log.d("SonicFragment", "SonicView is prepared, statusCode="+ statusCode);\n                playSonic(); // Refer to Step 3: Play\n            }\n        });\n    }\n\n'})})})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Haptics Feedback"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This feature is enabled through our public facing method prepare(), which excepts a boolean parameter ",(0,o.jsx)(n.code,{children:"isHapticsEnabled"}),", by default this parameter is set to true. Currently, haptics is only supported on the \u201ccheckout\u201d Sonic cue."]}),"\n",(0,o.jsx)(n.p,{children:"Troubleshooting Haptics Feedback"}),"\n",(0,o.jsx)(n.p,{children:"There are two scenarios in which haptics preparation may fail:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Device Compatability: Haptics feedback will fail to play if the device does not support haptics. The minimum Android version supporting haptics functionality is Android 8 (API level 26)) and above."}),"\n",(0,o.jsx)(n.li,{children:"Unsupported Sonic Cue: Attempting to prepare haptics on a cue that does not support haptics will result in preparation failure."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);